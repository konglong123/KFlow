<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="UTF-8" />
    <title></title>
    <style type="text/css">
        .Wdate
        {
            border: 1px solid #e5e6e7;
            height: 28px;
        }
        .fixed-table-container thead th .th-inner
        {
            padding: 8px;
            line-height: 24px;
            vertical-align: top;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap; /**background-color: #eaf2ff;**/
            width: 100%;
        }
        .fixed-table-header
        {
            background-color: #f2f2f2;

        }

        td
        {
            word-break: keep-all; /* 不换行 */
            white-space: nowrap; /* 不换行 */
            overflow: hidden; /* 内容超出宽度时隐藏超出部分的内容 */
            text-overflow: ellipsis; /* 当对象内文本溢出时显示省略标记(...) ；需与overflow:hidden;一起使用*/
            -o-text-overflow: ellipsis;
            -icab-text-overflow: ellipsis;
            -khtml-text-overflow: ellipsis;
            -moz-text-overflow: ellipsis;
            -webkit-text-overflow: ellipsis;
        }
    </style>
</head>
<body>
<script language="javascript" type="text/javascript">
    var ensName = GetQueryString("EnsName");
    var fields=[];
    //页面设置信息
    var cfg = new Entity("BP.Sys.EnCfg");
    cfg.No = ensName;
    cfg.RetrieveFromDBSources();

    //当前用户查询信息.
    var ur = new Entity("BP.Sys.UserRegedit");
    ur.MyPK = webUser.No + "_" + ensName + "_SearchAttrs";
    ur.RetrieveFromDBSources();

    //获取Url传的查询Key值
    var key = GetQueryString("Key");
    if(key!=null && key!=undefined){
        ur.SearchKey = key;
        ur.Update();
    }

    var count = ur.GetPara("RecCount");//查询总条数
    var mapBase;
    var pageIdx = this.GetQueryString("PageIdx");//当前页

    var pageSize = cfg.GetPara("PageSize");
    if(pageSize == null || pageSize == undefined || pageSize ==0)
        pageSize = 10;//一页显示的行数

    var pages = 1;//总页数
    if (count%pageSize!=0)
        pages = parseInt(count / pageSize) + 1;
    else
        pages = parseInt(count / pageSize);
    if(pages == 0) pages =1;

    //页面字体大小
    var fontSize = cfg.GetPara("FontSize");
    if(fontSize == null || fontSize == undefined || fontSize ==0)
        fontSize = 13;


    var firstLoadTable = false;

    //页面启动函数.
    $(function () {

        if (webUser.No == undefined) {
            alert('登录信息丢失，请重新登录。');
            return;
        }

        if (ensName == null || ensName == undefined) {
            $("#Msg").html("必要的参数EnsName没有传入.");
            return;
        }

        $("#Msg").html("<img src=../Img/loading.gif />&nbsp;正在加载,请稍后......");

        $("#dialogExpFile").hide();
        //初始化工具栏.
        InitToolbar();
        //执行查询.
        BindTable();
        $("#Msg").html("");

        $("td").on("mouseover",function() {
            if (this.offsetWidth < this.scrollWidth) {
                var that = this;
                var text = $(this).text();
                layer.tips(text, that,{
                    tips: 1,
                    time: 0
                });
            }
        });
        $("td").on("mouseout",function(){
            layer.closeAll();
        });

        if(pageIdx==null || pageIdx==undefined || pageIdx == "")
            pageIdx = 1;
        //分页
        Paginator(pages,pageIdx);
        $("#SearchHtml").css("font-size", fontSize+"px");

    });

    //查询
    function queryWorkflow() {
        $.ajax({
            type: 'post',
            async: false,
            xhrFields: {
                withCredentials: true
            },
            crossDomain: true,
            url: "" + "?DoType=Entity_RetrieveFromDBSources&EnName=" + self.enName + "&PKVal=" + pkavl,
            dataType: 'html',
            success: function (data) {
                result = data;
                if (data.indexOf("err@") == 0) {
                    alert(data);
                    //var str = "查询:" + self.enName + " pk=" + self.pkval + " 错误.\t\n" + data.replace('err@', '');
                    //alert('查询:' + str);
                    return;
                }
                if (data == "")
                    return 0;
                try {
                    jsonString = JSON.parse(data);
                    setData(self);
                    result = jsonString.RetrieveFromDBSources;

                } catch (e) {
                    result = "err@解析错误: " + data;
                    alert(result);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {

                ThrowMakeErrInfo("Entity_RetrieveFromDBSources-" + self.enName + " pkval=" + pkavl, textStatus);

                //alert(JSON.stringify(XMLHttpRequest));
                //result = "RetrieveFromDBSources err@系统发生异常, status: " + XMLHttpRequest.status + " readyState: " + XMLHttpRequest.readyState;
                //alert(result);
            }
        });
    }
</script>

<fieldset>
<legend>在开发过程中..</legend>

</fieldset>
</body>
</html>
